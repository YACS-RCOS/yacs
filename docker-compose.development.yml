version: '3.2'

# Yacs primary services
# Overrides for development
services:
  # Application services
  core:
    build: ./core
    environment:
      - COURSE_TOPIC_NAME=course_change 
      - SECTION_TOPIC_NAME=section_change
      - RAILS_ENV=development
      - SECRET_KEY_BASE=6ae504547712ae4faf35b9d6186322cf
      - SECRET_TOKEN=cc621dab5bb79f81057a7d17c8ceea42
      - WEB_CONCURRENCY=1
      - MAX_THREADS=2
    ports:
      - "4100:4100"
    volumes:
      - ./core:/usr/src/app
    tty: true
    stdin_open: true

  core-consumer:
    build: ./core
    environment:
      - RAILS_ENV=development
      - TERM_SHORTNAME=201909
      - UNI_SHORTNAME
    volumes:
      - ./core:/usr/src/app
    tty: true
    stdin_open: true

  web:
    build: ./web
    ports:
      - "4200:4200"
    volumes:
      - "./web/src:/usr/src/app/src"
    command: "ng build --watch"

  malg:
    build: ./malg
    ports:
      - "4500:4500"
    volumes:
      - "./malg:/usr/src/app"
    environment:
      - TERM_SHORTNAME=201909
      - UNI_SHORTNAME

  # Dependency services
  postgres:
    ports:
      - "5432:5432"

  redis:
    ports:
      - "6379:6379"

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    links:
      - core

  zookeeper:
    ports:
      - "2181:2181"

  kafka:
    ports:
     - "9094:9094"
     - "9092:9092"

  # Future/abandoned services
  # admin:
  #   build: ./admin
  #   ports:
  #     - "4300:4300"

  # notices:
  #   build: ./notice-service
  #   ports:
  #     - "4900:4900"
  #   volumes:
  #     - ./notice-service:/usr/src/app

  # kafka-manager:
  #   image: sheepkiller/kafka-manager:latest
  #   ports:
  #     - "9000:9000"
  #   links:
  #     - zookeeper
  #     - kafka
  #   environment:
  #     ZK_HOSTS: zookeeper:2181
  #     KM_ARGS: -Djava.net.preferIPv4Stack=true
 
  # planner-web:
  #   build: ./prereq-web
  #   depends_on:
  #     - planner-data
  #   ports:
  #     - "4700:4200"
  #   volumes:
  #     - ./prereq-web/src:/usr/src/app/src
  #   command: "ng serve --host 0.0.0.0 --disable-host-check"
 
  # planner-data:
  #   build: ./prereq-data
  #   ports:
  #     - "4600:3100"
  #   expose:
  #     - "3100"

  # notifications:
  #   build: ./notifications
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./notifications:/usr/src/app

  users:
    build: ./users
    ports:
      - "4400:4400"
    volumes:
      - "./users:/usr/src/app"
    tty: true
    stdin_open: true
